/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.l = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// identity function for calling harmory imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };

/******/ 	// define getter function for harmory exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		Object.defineProperty(exports, name, {
/******/ 			configurable: false,
/******/ 			enumerable: true,
/******/ 			get: getter
/******/ 		});
/******/ 	};

/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};

/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/* NProgress, (c) 2013, 2014 Rico Sta. Cruz - http://ricostacruz.com/nprogress\r\n * @license MIT */\r\n\r\n;(function(root, factory) {\r\n\r\n    if (true) {\r\n        !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n    } else if (typeof exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        root.NProgress = factory();\r\n    }\r\n\r\n})(this, function() {\r\n    var NProgress = {};\r\n\r\n    NProgress.version = '0.2.0';\r\n\r\n    var Settings = NProgress.settings = {\r\n        minimum: 0.08,\r\n        easing: 'ease',\r\n        positionUsing: '',\r\n        speed: 200,\r\n        trickle: true,\r\n        trickleRate: 0.02,\r\n        trickleSpeed: 800,\r\n        showSpinner: true,\r\n        barSelector: '[role=\"bar\"]',\r\n        spinnerSelector: '[role=\"spinner\"]',\r\n        parent: 'body',\r\n        template: '<div class=\"bar\" role=\"bar\"><div class=\"peg\"></div></div><div class=\"spinner\" role=\"spinner\"><div class=\"spinner-icon\"></div></div>'\r\n    };\r\n\r\n    /**\r\n     * Updates configuration.\r\n     *\r\n     *     NProgress.configure({\r\n   *       minimum: 0.1\r\n   *     });\r\n     */\r\n    NProgress.configure = function(options) {\r\n        var key, value;\r\n        for (key in options) {\r\n            value = options[key];\r\n            if (value !== undefined && options.hasOwnProperty(key)) Settings[key] = value;\r\n        }\r\n\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Last number.\r\n     */\r\n\r\n    NProgress.status = null;\r\n\r\n    /**\r\n     * Sets the progress bar status, where `n` is a number from `0.0` to `1.0`.\r\n     *\r\n     *     NProgress.set(0.4);\r\n     *     NProgress.set(1.0);\r\n     */\r\n\r\n    NProgress.set = function(n) {\r\n        var started = NProgress.isStarted();\r\n\r\n        n = clamp(n, Settings.minimum, 1);\r\n        NProgress.status = (n === 1 ? null : n);\r\n\r\n        var progress = NProgress.render(!started),\r\n            bar      = progress.querySelector(Settings.barSelector),\r\n            speed    = Settings.speed,\r\n            ease     = Settings.easing;\r\n\r\n        progress.offsetWidth; /* Repaint */\r\n\r\n        queue(function(next) {\r\n            // Set positionUsing if it hasn't already been set\r\n            if (Settings.positionUsing === '') Settings.positionUsing = NProgress.getPositioningCSS();\r\n\r\n            // Add transition\r\n            css(bar, barPositionCSS(n, speed, ease));\r\n\r\n            if (n === 1) {\r\n                // Fade out\r\n                css(progress, {\r\n                    transition: 'none',\r\n                    opacity: 1\r\n                });\r\n                progress.offsetWidth; /* Repaint */\r\n\r\n                setTimeout(function() {\r\n                    css(progress, {\r\n                        transition: 'all ' + speed + 'ms linear',\r\n                        opacity: 0\r\n                    });\r\n                    setTimeout(function() {\r\n                        NProgress.remove();\r\n                        next();\r\n                    }, speed);\r\n                }, speed);\r\n            } else {\r\n                setTimeout(next, speed);\r\n            }\r\n        });\r\n\r\n        return this;\r\n    };\r\n\r\n    NProgress.isStarted = function() {\r\n        return typeof NProgress.status === 'number';\r\n    };\r\n\r\n    /**\r\n     * Shows the progress bar.\r\n     * This is the same as setting the status to 0%, except that it doesn't go backwards.\r\n     *\r\n     *     NProgress.start();\r\n     *\r\n     */\r\n    NProgress.start = function() {\r\n        if (!NProgress.status) NProgress.set(0);\r\n\r\n        var work = function() {\r\n            setTimeout(function() {\r\n                if (!NProgress.status) return;\r\n                NProgress.trickle();\r\n                work();\r\n            }, Settings.trickleSpeed);\r\n        };\r\n\r\n        if (Settings.trickle) work();\r\n\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Hides the progress bar.\r\n     * This is the *sort of* the same as setting the status to 100%, with the\r\n     * difference being `done()` makes some placebo effect of some realistic motion.\r\n     *\r\n     *     NProgress.done();\r\n     *\r\n     * If `true` is passed, it will show the progress bar even if its hidden.\r\n     *\r\n     *     NProgress.done(true);\r\n     */\r\n\r\n    NProgress.done = function(force) {\r\n        if (!force && !NProgress.status) return this;\r\n\r\n        return NProgress.inc(0.3 + 0.5 * Math.random()).set(1);\r\n    };\r\n\r\n    /**\r\n     * Increments by a random amount.\r\n     */\r\n\r\n    NProgress.inc = function(amount) {\r\n        var n = NProgress.status;\r\n\r\n        if (!n) {\r\n            return NProgress.start();\r\n        } else {\r\n            if (typeof amount !== 'number') {\r\n                amount = (1 - n) * clamp(Math.random() * n, 0.1, 0.95);\r\n            }\r\n\r\n            n = clamp(n + amount, 0, 0.994);\r\n            return NProgress.set(n);\r\n        }\r\n    };\r\n\r\n    NProgress.trickle = function() {\r\n        return NProgress.inc(Math.random() * Settings.trickleRate);\r\n    };\r\n\r\n    /**\r\n     * Waits for all supplied jQuery promises and\r\n     * increases the progress as the promises resolve.\r\n     *\r\n     * @param $promise jQUery Promise\r\n     */\r\n    (function() {\r\n        var initial = 0, current = 0;\r\n\r\n        NProgress.promise = function($promise) {\r\n            if (!$promise || $promise.state() === \"resolved\") {\r\n                return this;\r\n            }\r\n\r\n            if (current === 0) {\r\n                NProgress.start();\r\n            }\r\n\r\n            initial++;\r\n            current++;\r\n\r\n            $promise.always(function() {\r\n                current--;\r\n                if (current === 0) {\r\n                    initial = 0;\r\n                    NProgress.done();\r\n                } else {\r\n                    NProgress.set((initial - current) / initial);\r\n                }\r\n            });\r\n\r\n            return this;\r\n        };\r\n\r\n    })();\r\n\r\n    /**\r\n     * (Internal) renders the progress bar markup based on the `template`\r\n     * setting.\r\n     */\r\n\r\n    NProgress.render = function(fromStart) {\r\n        if (NProgress.isRendered()) return document.getElementById('nprogress');\r\n\r\n        addClass(document.documentElement, 'nprogress-busy');\r\n\r\n        var progress = document.createElement('div');\r\n        progress.id = 'nprogress';\r\n        progress.innerHTML = Settings.template;\r\n\r\n        var bar      = progress.querySelector(Settings.barSelector),\r\n            perc     = fromStart ? '-100' : toBarPerc(NProgress.status || 0),\r\n            parent   = document.querySelector(Settings.parent),\r\n            spinner;\r\n\r\n        css(bar, {\r\n            transition: 'all 0 linear',\r\n            transform: 'translate3d(' + perc + '%,0,0)'\r\n        });\r\n\r\n        if (!Settings.showSpinner) {\r\n            spinner = progress.querySelector(Settings.spinnerSelector);\r\n            spinner && removeElement(spinner);\r\n        }\r\n\r\n        if (parent != document.body) {\r\n            addClass(parent, 'nprogress-custom-parent');\r\n        }\r\n\r\n        parent.appendChild(progress);\r\n        return progress;\r\n    };\r\n\r\n    /**\r\n     * Removes the element. Opposite of render().\r\n     */\r\n\r\n    NProgress.remove = function() {\r\n        removeClass(document.documentElement, 'nprogress-busy');\r\n        removeClass(document.querySelector(Settings.parent), 'nprogress-custom-parent');\r\n        var progress = document.getElementById('nprogress');\r\n        progress && removeElement(progress);\r\n    };\r\n\r\n    /**\r\n     * Checks if the progress bar is rendered.\r\n     */\r\n\r\n    NProgress.isRendered = function() {\r\n        return !!document.getElementById('nprogress');\r\n    };\r\n\r\n    /**\r\n     * Determine which positioning CSS rule to use.\r\n     */\r\n\r\n    NProgress.getPositioningCSS = function() {\r\n        // Sniff on document.body.style\r\n        var bodyStyle = document.body.style;\r\n\r\n        // Sniff prefixes\r\n        var vendorPrefix = ('WebkitTransform' in bodyStyle) ? 'Webkit' :\r\n            ('MozTransform' in bodyStyle) ? 'Moz' :\r\n                ('msTransform' in bodyStyle) ? 'ms' :\r\n                    ('OTransform' in bodyStyle) ? 'O' : '';\r\n\r\n        if (vendorPrefix + 'Perspective' in bodyStyle) {\r\n            // Modern browsers with 3D support, e.g. Webkit, IE10\r\n            return 'translate3d';\r\n        } else if (vendorPrefix + 'Transform' in bodyStyle) {\r\n            // Browsers without 3D support, e.g. IE9\r\n            return 'translate';\r\n        } else {\r\n            // Browsers without translate() support, e.g. IE7-8\r\n            return 'margin';\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Helpers\r\n     */\r\n\r\n    function clamp(n, min, max) {\r\n        if (n < min) return min;\r\n        if (n > max) return max;\r\n        return n;\r\n    }\r\n\r\n    /**\r\n     * (Internal) converts a percentage (`0..1`) to a bar translateX\r\n     * percentage (`-100%..0%`).\r\n     */\r\n\r\n    function toBarPerc(n) {\r\n        return (-1 + n) * 100;\r\n    }\r\n\r\n\r\n    /**\r\n     * (Internal) returns the correct CSS for changing the bar's\r\n     * position given an n percentage, and speed and ease from Settings\r\n     */\r\n\r\n    function barPositionCSS(n, speed, ease) {\r\n        var barCSS;\r\n\r\n        if (Settings.positionUsing === 'translate3d') {\r\n            barCSS = { transform: 'translate3d('+toBarPerc(n)+'%,0,0)' };\r\n        } else if (Settings.positionUsing === 'translate') {\r\n            barCSS = { transform: 'translate('+toBarPerc(n)+'%,0)' };\r\n        } else {\r\n            barCSS = { 'margin-left': toBarPerc(n)+'%' };\r\n        }\r\n\r\n        barCSS.transition = 'all '+speed+'ms '+ease;\r\n\r\n        return barCSS;\r\n    }\r\n\r\n    /**\r\n     * (Internal) Queues a function to be executed.\r\n     */\r\n\r\n    var queue = (function() {\r\n        var pending = [];\r\n\r\n        function next() {\r\n            var fn = pending.shift();\r\n            if (fn) {\r\n                fn(next);\r\n            }\r\n        }\r\n\r\n        return function(fn) {\r\n            pending.push(fn);\r\n            if (pending.length == 1) next();\r\n        };\r\n    })();\r\n\r\n    /**\r\n     * (Internal) Applies css properties to an element, similar to the jQuery\r\n     * css method.\r\n     *\r\n     * While this helper does assist with vendor prefixed property names, it\r\n     * does not perform any manipulation of values prior to setting styles.\r\n     */\r\n\r\n    var css = (function() {\r\n        var cssPrefixes = [ 'Webkit', 'O', 'Moz', 'ms' ],\r\n            cssProps    = {};\r\n\r\n        function camelCase(string) {\r\n            return string.replace(/^-ms-/, 'ms-').replace(/-([\\da-z])/gi, function(match, letter) {\r\n                return letter.toUpperCase();\r\n            });\r\n        }\r\n\r\n        function getVendorProp(name) {\r\n            var style = document.body.style;\r\n            if (name in style) return name;\r\n\r\n            var i = cssPrefixes.length,\r\n                capName = name.charAt(0).toUpperCase() + name.slice(1),\r\n                vendorName;\r\n            while (i--) {\r\n                vendorName = cssPrefixes[i] + capName;\r\n                if (vendorName in style) return vendorName;\r\n            }\r\n\r\n            return name;\r\n        }\r\n\r\n        function getStyleProp(name) {\r\n            name = camelCase(name);\r\n            return cssProps[name] || (cssProps[name] = getVendorProp(name));\r\n        }\r\n\r\n        function applyCss(element, prop, value) {\r\n            prop = getStyleProp(prop);\r\n            element.style[prop] = value;\r\n        }\r\n\r\n        return function(element, properties) {\r\n            var args = arguments,\r\n                prop,\r\n                value;\r\n\r\n            if (args.length == 2) {\r\n                for (prop in properties) {\r\n                    value = properties[prop];\r\n                    if (value !== undefined && properties.hasOwnProperty(prop)) applyCss(element, prop, value);\r\n                }\r\n            } else {\r\n                applyCss(element, args[1], args[2]);\r\n            }\r\n        }\r\n    })();\r\n\r\n    /**\r\n     * (Internal) Determines if an element or space separated list of class names contains a class name.\r\n     */\r\n\r\n    function hasClass(element, name) {\r\n        var list = typeof element == 'string' ? element : classList(element);\r\n        return list.indexOf(' ' + name + ' ') >= 0;\r\n    }\r\n\r\n    /**\r\n     * (Internal) Adds a class to an element.\r\n     */\r\n\r\n    function addClass(element, name) {\r\n        var oldList = classList(element),\r\n            newList = oldList + name;\r\n\r\n        if (hasClass(oldList, name)) return;\r\n\r\n        // Trim the opening space.\r\n        element.className = newList.substring(1);\r\n    }\r\n\r\n    /**\r\n     * (Internal) Removes a class from an element.\r\n     */\r\n\r\n    function removeClass(element, name) {\r\n        var oldList = classList(element),\r\n            newList;\r\n\r\n        if (!hasClass(element, name)) return;\r\n\r\n        // Replace the class name.\r\n        newList = oldList.replace(' ' + name + ' ', ' ');\r\n\r\n        // Trim the opening and closing spaces.\r\n        element.className = newList.substring(1, newList.length - 1);\r\n    }\r\n\r\n    /**\r\n     * (Internal) Gets a space separated list of the class names on the element.\r\n     * The list is wrapped with a single space on each end to facilitate finding\r\n     * matches within the list.\r\n     */\r\n\r\n    function classList(element) {\r\n        return (' ' + (element.className || '') + ' ').replace(/\\s+/gi, ' ');\r\n    }\r\n\r\n    /**\r\n     * (Internal) Removes an element from the DOM.\r\n     */\r\n\r\n    function removeElement(element) {\r\n        element && element.parentNode && element.parentNode.removeChild(element);\r\n    }\r\n\r\n    return NProgress;\r\n});\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }
/******/ ]);